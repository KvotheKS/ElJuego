[gd_scene load_steps=4 format=2]

[ext_resource path="res://Scenes/Test.tscn" type="PackedScene" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform int pixelSize = 10;

void fragment()
{
	
	ivec2 size = textureSize(TEXTURE, 0);
	
	int xRes = size.x;
	int yRes = size.y;
	
	float xFactor = float(xRes) / float(pixelSize);
	float yFactor = float(yRes) / float(pixelSize);
	
	float grid_uv_x = round(UV.x * xFactor) / xFactor;
	float grid_uv_y = round(UV.y * yFactor) / yFactor;
	
	vec4 text = texture(TEXTURE, vec2(grid_uv_x, grid_uv_y));
	
	COLOR = text;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/pixelSize = 2

[node name="ViewportContainer" type="ViewportContainer"]
material = SubResource( 2 )
margin_left = 1.0
margin_right = 1001.0
margin_bottom = 1000.0

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 640, 360 )
handle_input_locally = false
render_target_update_mode = 3

[node name="Test" parent="Viewport" instance=ExtResource( 1 )]
